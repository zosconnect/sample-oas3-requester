openapi: 3.0.3
info:
  title: RedbookAPI
  description: A simple OAS 3.0 IBM Redbook management API used to demonstate the function of the z/OS Connect API Requester functionality.
  version: 1.0.0
paths:
  '/redbook/{title}':
    summary: Redbook Management API
    description: Operations that pertain to the maintenance of redbook information
    get:
      summary: Retrieve a Redbook
      description: Retrieve a single redbook by title with optional author, if the author is supplied and the redbook is not
                   found return a list of the authors works.
      operationId: getRedbook
      parameters:
        - name: title
          in: path
          description: The required Redbook title
          required: true
          schema:
            type: string
            maxLength: 80
        - name: author
          in: query
          description: An optional redbook author
          schema:
            type: string
            maxLength: 40
      responses:
        '200':
          description: A Redbook is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbook'
        '404':
          description: No Redbook of the title exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedbookNotFound'
        '500':
          description: Endpoint Internal Server Error
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: Create a Redbook entry
      description: Supplies a new Redbook which is stored in the Redbook inventory
      operationId: createRedbook
      parameters:
        - name: title
          in: path
          description: The required Redbook title
          required: true
          schema:
            type: string
            maxLength: 80
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redbook'
      responses:
        '2XX':
          description: A Redbook is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbook'
        '409':
          description: The redbook title already exists and is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbook'
    patch:
      summary: Patch Update an existing Redbook
      description: 'Update a Redbook entry via a Patch Document using RFC 6902'
      operationId: patchRedbook
      parameters:
        - name: title
          in: path
          description: The required Redbook title
          required: true
          schema:
            type: string
            maxLength: 80
      requestBody:
        content:
          application/json-patch+json:
            # Note the Schema is not used for RFC6902 (application/json-patch+json) media type
            # The data format is always a fixed format. See RFC6902.
            schema:
              $ref: '#/components/schemas/None'
      responses:
        '200':
          description: A Redbook is patch updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbook'
        '404':
          description: No Redbook of the title exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedbookNotFound'
  '/redbook/m/{title}':
    summary: Redbook Management Supplemental API
    description: An example of a RFC 7396 Merge Patch operation
    patch:
      summary: Patch Update an existing Redbook
      description: 'Update a Redbook entry via a Patch Document using RFC 7396'
      operationId: mergeRedbook
      parameters:
        - name: title
          in: path
          description: The required Redbook title
          required: true
          schema:
            type: string
            maxLength: 80
      requestBody:
        content:
          # RFC7396
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Redbook'
      responses:
        '200':
          description: A Redbook is merge patch updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbook'
        '404':
          description: No Redbook of the title exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedbookNotFound'
  /redbooks:
    summary: Redbook bulk operations
    description: Bulk operations
    get:
      summary: Retrieve all Redbooks
      description: Retrieve all redbooks
      operationId: getAllRedbooks
      parameters:
        - name: author
          in: query
          description: An optional author
          required: false
          schema:
            type: string
            maxLength: 40
      responses:
        '200':
          description: A collection of Redbooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redbooks'
        "404":
          description: Authors collection not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedbookNotFound'
components:
  schemas:
    Redbook:
      type: object
      required:
        - title
        - authors
        - status
        - formNumber
      properties:
        title:
          type: string
          maxLength: 80
        authors:
            type: array
            maxItems: 20
            items:
              type: object
              properties:
                firstName:
                  type: string
                  maxLength: 40
                lastName:
                  type: string
                  maxLength: 40
        status:
          type: string
          enum: [ DRAFT, PUBLISHED ]
        formNumber:
          type: string
          minLength: 12
          maxLength: 12
        publicationDate:
          type: string
          format: date
        documentType:
          type: string
          enum: [ PDF, HARDCOPY ]
        sizeMB:
          type: number
          format: decimal
          minimum: 0
        url:
          type: string
          maxLength: 100
        owningDepartment:
          type: object
          required:
            - id
            - name
            - contact
          properties: 
            id:
              type: string
              minLength: 5
              maxLength: 5
            name:
              type: string
              maxLength: 40
            contact:
              type: string
              maxLength: 40
    Redbooks:
      type: array
      items:
        $ref: '#/components/schemas/Redbook'
    RedbookNotFound:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        authorsBooks:
          type: array
          items:
            $ref: '#/components/schemas/Redbook'
    None:
      type: object
      required:
        - none
      properties:
        none:
          type: string
          maxLength: 1
